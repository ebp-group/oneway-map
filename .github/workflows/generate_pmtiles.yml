name: Generate PMTiles

on:
  workflow_dispatch:

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - id: set-matrix
        run: |
          matrix=$(python build_matrix.py | jq -c '.')
          echo $matrix
          echo "matrix=$matrix" >> $GITHUB_OUTPUT
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  oneway_data:
    needs: build-matrix
    runs-on: ubuntu-latest
    timeout-minutes: 90
    strategy:
      fail-fast: true
      max-parallel: 10
      matrix: ${{fromJSON(needs.build-matrix.outputs.matrix)}}

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install tippecanoe
        run: |
          sudo apt-get install gcc g++ make libsqlite3-dev zlib1g-dev
          git clone https://github.com/felt/tippecanoe.git
          cd tippecanoe
          make -j
          sudo make install
      
      - name: Get GeoJSON from Overpass
        run: python export_oneway.py -i ${{ matrix.isoCode }} -r ${{ matrix.regionLabel}} -o ${{ matrix.overpass_query }}

      - name: Convert GeoJSON to PMTiles
        run: ./oneway_countries/generate_pmtiles.sh
     
      - name: Upload PMTile file as artifact
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: output-${{ matrix.iso-code }}
          path: |
            output/*.pmtiles

  merge_data:
    needs: oneway_data
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install tippecanoe
        run: |
          sudo apt-get install gcc g++ make libsqlite3-dev zlib1g-dev
          git clone https://github.com/felt/tippecanoe.git
          cd tippecanoe
          make -j
          sudo make install

      - name: Install MinIO client mc
        run: |
          wget https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          sudo mv mc /usr/local/bin/
          mc --help

      - name: Download output
        uses: actions/download-artifact@v4
        with:
          pattern: output-*
          path: output
          merge-multiple: true

      - name: Merge all PMTiles together
        run: tile-join --overzoom -z 17 -Z 5  -o merged.pmtiles output/*.pmtiles

      - name: Minio Upload
        env:
          MINIO_ENDPOINT: ${{ secrets.MINIO_ENDPOINT }}
          MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
        run: |
          mc alias set deploy "$MINIO_ENDPOINT" "$MINIO_ACCESS_KEY" "$MINIO_SECRET_KEY"
          mc put merged.pmtiles deploy/oneway-map/
